% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_int.R
\name{.si_create_dtap_folders}
\alias{.si_create_dtap_folders}
\title{Create DTAP Folder Structure}
\usage{
.si_create_dtap_folders(
  config,
  environment = "production",
  create_platinum = TRUE,
  verbose = TRUE
)
}
\arguments{
\item{config}{A nested list representing your YAML configuration
(already read via \code{\link[yaml]{yaml.load_file}}).}

\item{environment}{A character string specifying the environment in DTAP
(e.g., \code{"production"}, \code{"development"}, \code{"test"}, \code{"acceptance"}).}

\item{create_platinum}{Logical indicating whether to create platinum folders
for new forecast outputs. Defaults to \code{TRUE}.}

\item{verbose}{Logical; if \code{TRUE}, messages about created folders
are printed.}
}
\value{
Returns \code{TRUE} (invisibly) if successful. Creates folders on disk as a side effect.
}
\description{
An internal helper function that creates the required folder structure
for a given environment (e.g., production) based on the YAML configuration.
}
\details{
This function assumes the YAML has a structure similar to:
\preformatted{
  root: OneDriveConsumer/ET/pythia/data
  environment: production
  functional_areas:
    sales:
      datasets:
        rtp:
          directory: sales_rtp
          ...
          staging:
            bronze:
              pattern: ...
              extension: csv
            silver:
              pattern: ...
              extension: parquet
            platinum:
              ...
}

The function iterates through each functional area, dataset, and staging level,
constructing folder paths of the form:
\code{file.path(root, <staging_level>, <directory>)}.
}
\examples{
\dontrun{
  # Suppose you have read your YAML config into 'cfg':
  # cfg <- yaml::yaml.load_file("path/to/your_config.yaml")

  # Create folder structure in 'production'
  create_dtap_folders(cfg, environment = "production")
}

}
\keyword{internal}
