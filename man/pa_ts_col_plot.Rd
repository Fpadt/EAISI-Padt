% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eval_plotting_ext.R
\name{pa_ts_col_plot}
\alias{pa_ts_col_plot}
\title{Plot a Scaled Time Series as Columns}
\usage{
pa_ts_col_plot(.dtTS, .scale = 1000, .padding = 0.1)
}
\arguments{
\item{.dtTS}{A \code{data.table} containing at least:
\describe{
  \item{y}{Numeric values representing sales or other metric}
  \item{MATERIAL}{A factor or character vector of material codes}
  \item{SALESORG}{A factor or character vector of sales organization codes}
  \item{CALMONTH}{A date or factor representing month/year}
}}

\item{.scale}{A numeric scale factor to divide the \code{y} column by.
Default is \code{1000}.}

\item{.padding}{A numeric value indicating how much vertical padding should
be added to the plotâ€™s y-axis range. Default is \code{0.1}.}
}
\value{
A \code{ggplot} object showing a column plot of the scaled data.
}
\description{
Creates a column chart from time series data, scaled by a specified factor,
and optionally padding the y-axis range. This function is designed to display
historical sales data by month with branding colors.
}
\examples{
\dontrun{
library(data.table)
# Example data
dt_example <- data.table(
  CALMONTH = seq(as.Date("2020-01-01"), by = "month", length.out = 12),
  y = round(runif(12, 100, 500)),
  MATERIAL = "MATERIAL_001",
  SALESORG = "ORG01"
)

# Plot, scaling by 1000
pa_ts_col_plot(dt_example, .scale = 1000, .padding = 0.2)
}
}
