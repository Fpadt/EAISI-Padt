% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file-handling_int.R
\name{.fh_path_dataset_get}
\alias{.fh_path_dataset_get}
\title{Construct Staging Path with Environment}
\usage{
.fh_path_dataset_get(
  environment = c("development", "test", "acceptance", "production"),
  staging = c("bronze", "silver", "gold", "platinum"),
  functional_area,
  dataset,
  config = .hl_config_get()
)
}
\arguments{
\item{environment}{A character string specifying the environment,
e.g., \code{"Production"}, \code{"Test"}, \code{"Development"}.
Defaults to \code{"Production"}.}

\item{staging}{A character string for the staging level, commonly
\code{"bronze"}, \code{"silver"}, or \code{"platinum"}.}

\item{functional_area}{A character string (e.g., \code{"sales"}).}

\item{dataset}{A character string (e.g., \code{"rtp"}).}

\item{config}{A list representing your YAML configuration (already read via
\code{\link[yaml]{yaml.load_file}}).}
}
\value{
A string with the full path to the specified staging folder (without file name).
}
\description{
Creates a folder path of the form:
  \code{root / environment / staging / directory}.
}
\details{
This function assumes your YAML structure looks like this:
\preformatted{
  root: OneDriveConsumer/ET/pythia/data
  functional_areas:
    sales:
      datasets:
        rtp:
          directory: sales_rtp
          ...
}

and appends \code{environment} and \code{staging} before the
\code{directory} name:
\code{file.path(root, environment, staging, directory)}.
}
\examples{
\dontrun{
  # Suppose 'cfg' is your loaded YAML list
  # e.g. cfg <- yaml::yaml.load_file("path/to/config.yaml")

  # Construct path for sales_rtp in 'bronze' under 'Production':
  bronze_path <- construct_staging_path(
    config = cfg,
    functional_area = "sales",
    dataset = "rtp",
    staging = "bronze",
    environment = "Production"
  )
  # "OneDriveConsumer/ET/pythia/data/Production/bronze/sales_rtp"
}

}
\keyword{internal}
