% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data-ingestion_ext.R
\name{pa_transform}
\alias{pa_transform}
\title{transform CSV files to parquet}
\usage{
pa_transform(
  source_path,
  output_path,
  file_pattern,
  file_spec,
  ohdest,
  verbose
)
}
\arguments{
\item{source_path}{A character string specifying the path to the source directory containing CSV files.}

\item{output_path}{A character string specifying the path to the output directory where Parquet files will be saved.}

\item{file_pattern}{A character string with a regex pattern to filter which source CSV files to include.}

\item{file_spec}{A list or object defining file specifications (e.g., delimiter, headers).}

\item{ohdest}{A character string indicating which “ohdest” pipeline configuration to retrieve and use.}

\item{verbose}{A logical indicating whether to print verbose messages (\code{TRUE}) or not (\code{FALSE}).}
}
\value{
Returns \code{NULL} invisibly. The side-effect is that new Parquet files are written to \code{output_path}.
}
\description{
This function transforms one or more CSV files into Parquet format using a predefined
data transformation pipeline (the “pipeline for ohdest”).
}
\details{
The function performs the following steps:
\enumerate{
  \item Checks whether both \code{source_path} and \code{output_path} exist.
  \item Lists files matching \code{file_pattern} in \code{source_path}.
  \item Retrieves the pipeline definition for the specified \code{ohdest}.
  \item Invokes an internal function \code{.di_csv_to_parquet_transform} (called via \code{purrr::walk})
        on each file to do the actual transformation.
}
}
\seealso{
\code{\link{.di_transformation_rules_get}}, \code{\link{.di_csv_to_parquet_transform}}
}
