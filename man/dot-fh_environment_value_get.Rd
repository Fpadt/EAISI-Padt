% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/file-handling_int.R
\name{.fh_environment_value_get}
\alias{.fh_environment_value_get}
\title{Retrieve a Specific Field from the Specified or All Environments}
\usage{
.fh_environment_value_get(.key, .envr = NULL, .config = .hl_config_get())
}
\arguments{
\item{.key}{A character string specifying the name of the field to retrieve
from each environment entry (e.g., \code{"name"} or \code{"root"}).}

\item{.envr}{An optional character string specifying a single environment name
(e.g., \code{"production"}, \code{"development"}). If \code{NULL} (default),
the function returns values for \emph{all} environments.}

\item{.config}{A list or environment containing the loaded configuration.
Defaults to \code{.hl_config_get()}, an internal function assumed to provide
the YAML or config object.}
}
\value{
A character vector containing the requested field's value for the matching
environments. If \code{.envr} is \code{NULL}, this includes \emph{all}
environments. If no environments match \code{.envr}, the function returns
an empty character vector.
}
\description{
This internal helper function extracts a user-specified field (e.g.,
\code{"name"}, \code{"root"}) from environment entries in the configuration.
You can optionally provide an environment name (\code{.envr}) to retrieve
the field from only that environment.
}
\details{
The function first accesses the top-level \code{environments} key in the
configuration, which should be a list of environment entries, each containing
at least one field named according to \code{.key}. It filters the list by
\code{.envr} (if specified), then uses \code{\link[base]{vapply}} to extract
that field from each matching environment, returning the results as a
character vector.

If \code{environments} is missing or empty, the function raises an error.
}
\examples{
\dontrun{
  # Suppose your YAML has:
  # environments:
  #   - name: development
  #     root: 'OneDriveConsumer/.../development'
  #   - name: production
  #     root: 'OneDriveConsumer/.../production'

  # retrieving environment names for all environments
  env_names <- .fh_environment_value_get(.key = "name")
  print(env_names)
  # e.g. c("development", "production")

  # retrieving the root path for only the 'production' environment
  prod_root <- .fh_environment_value_get(.key = "root", .envr = "production")
  print(prod_root)
  # e.g. "OneDriveConsumer/.../production"
}

}
\keyword{internal}
